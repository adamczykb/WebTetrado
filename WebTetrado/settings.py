"""
Django settings for WebTetrado project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import environ

env = environ.Env()
# reading .env file
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY", default=environ.NoValue())
DEBUG = False
ALLOWED_HOSTS = ['webtetrado.cs.put.poznan.pl','127.0.0.1']
CSRF_COOKIE_NAME = "csrftoken"

PROTECTED_MEDIA_FOLDERS=['uploads']

# Application definition
DATA_UPLOAD_MAX_NUMBER_FIELDS=10000
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    "django_rq",
    'backend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'WebTetrado.middleware.RestrictMediaFolders.RestrictMediaFolders'
    ]

ROOT_URLCONF = 'WebTetrado.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WebTetrado.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if DEBUG:
    WEBTETRADO_BACKEND_URL = 'http://localhost:8080'
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    WEBTETRADO_BACKEND_URL = 'http://webtetrado_backend:8080'
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': env('POSTGRES_DB'),
            'USER': env('POSTGRES_USER'),
            'PASSWORD': env('POSTGRES_PASSWORD'),
            'HOST': 'db',
            'PORT': '',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': str(BASE_DIR)+'/debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file','console'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'CET'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# celery repetetive task config

if DEBUG:
    REDIS_HOST = '127.0.0.1'
    CELERY_BROKER_URL = 'redis://'+REDIS_HOST+':6379'
    CELERY_RESULT_BACKEND = 'redis://'+REDIS_HOST+':6379'
    CELERY_TASK_TRACK_STARTED = True
    CELERY_CACHE_BACKEND = 'default'
else:
    REDIS_HOST = 'redis'
    CELERY_BROKER_URL = 'redis://'+REDIS_HOST
    CELERY_RESULT_BACKEND = 'redis://'+REDIS_HOST
    CELERY_TASK_TRACK_STARTED = True
    CELERY_CACHE_BACKEND = 'default'


CACHES = {
    'default': {
        'BACKEND': 'redis_cache.cache.RedisCache',
        'LOCATION': REDIS_HOST+':6379',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'MAX_ENTRIES': 5000,
        },
    },

}
# REDIS server config
RQ = {
    'host': REDIS_HOST,
    'db': 0,
}
RQ_QUEUES = {
    'default': {
        'HOST': REDIS_HOST,
        'PORT': 6379,
        'DB': 0,
        'PASSWORD': '',
        'DEFAULT_TIMEOUT': 86400,
        'USE_REDIS_CACHE': 'default',
    },
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

MEDIA_ROOT = str(BASE_DIR) + '/media/'
MEDIA_URL = '/media/'
STATIC_URL = '/static/'
REACT_APP_DIR = os.path.join(BASE_DIR, 'frontend')

if DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    STATICFILES_DIRS = [
        os.path.join(REACT_APP_DIR, 'build', 'static'),
        os.path.join(REACT_APP_DIR, 'build'),
    ]
else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    STATICFILES_DIRS = [
        os.path.join(REACT_APP_DIR, 'build', 'static'),
    ]

FRONTEND_LOCATION = os.path.join(STATIC_ROOT, "index.html")

WEBPUSH_SETTINGS = {
   "VAPID_PUBLIC_KEY": env('VAPID_PUBLIC_KEY', default=environ.NoValue()),
   "VAPID_PRIVATE_KEY": env('VAPID_PRIVATE_KEY', default=environ.NoValue()),
   "VAPID_ADMIN_EMAIL": env('VAPID_EMAIL', default=environ.NoValue())
}
